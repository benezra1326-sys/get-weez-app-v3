import OpenAI from 'openai'
import { establishments, events, activities, recommendations } from '../data/marbella-data.js'
import { getWeezAICoach } from './ai-coaching.js'

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
})

// R√©ponses de fallback intelligentes et vari√©es
const fallbackResponses = {
  villa: [
    "Parfait ! Pour une villa √† Marbella pour ton EVG, je te recommande **Villa Marbella Club** - villa de luxe avec piscine priv√©e, jardin et vue sur la mer (jusqu'√† 12 personnes). Ou **Villa Golden Mile** - encore plus exclusive avec spa priv√© et acc√®s direct √† la plage (jusqu'√† 16 personnes). Je peux organiser le transfert, la restauration et les activit√©s !",
    "Excellent choix ! Pour ton EVG √† Marbella, j'ai **Villa Marbella Club** avec piscine priv√©e et vue mer (8-12 personnes, ‚Ç¨800-1200/nuit) ou **Villa Golden Mile** ultra-luxe avec acc√®s plage priv√©e (12-16 personnes, ‚Ç¨1500-2500/nuit). Je peux tout organiser : transfert, chef priv√©, activit√©s !",
    "Super ! Pour ton enterrement de vie de gar√ßon, je te propose **Villa Puerto Ban√∫s** moderne avec piscine LED (6-10 personnes, ‚Ç¨600-900/nuit) ou **Villa Golden Mile** avec cin√©ma priv√© et jacuzzi rooftop. Je m'occupe de tout : transport, restauration, soir√©es !"
  ],
  plage: [
    "Parfait ! Pour une plage √† Marbella, je te recommande **Nikki Beach** - l'endroit le plus exclusif avec piscine, restaurant et ambiance festive. Ou **Puente Romano Beach** avec son acc√®s priv√© et ses transats de luxe. Les deux ont des r√©servations VIP disponibles !",
    "Excellent ! Pour une plage VIP √† Marbella, **Nikki Beach** est parfait avec sa piscine, restaurant et ambiance festive. Ou **Puente Romano Beach** pour plus d'intimit√© avec acc√®s priv√©. Je peux r√©server des transats VIP !",
    "Super choix ! **Nikki Beach** est l'endroit le plus branch√© avec piscine et restaurant, ou **Puente Romano Beach** pour plus de calme avec acc√®s priv√©. Je r√©serve tout pour toi !"
  ],
  restaurant: [
    "Excellent ! Pour un restaurant √† Marbella, je te conseille **La Terraza del Mar** - vue imprenable sur la mer et cuisine m√©diterran√©enne raffin√©e. Ou **Nobu Marbella** pour une exp√©rience japonaise de luxe. Les deux acceptent les r√©servations VIP !",
    "Parfait ! **La Terraza del Mar** a une vue magnifique sur la mer avec cuisine m√©diterran√©enne, ou **Nobu Marbella** pour du sushi de luxe. Je peux r√©server une table VIP !",
    "Super ! Je te recommande **La Terraza del Mar** pour la vue mer et la cuisine m√©diterran√©enne, ou **Nobu Marbella** pour une exp√©rience japonaise exclusive. R√©servation VIP assur√©e !"
  ],
  sortir: [
    "Super ! Pour sortir ce soir √† Marbella, **Olivia Valere** est le club le plus exclusif avec DJ internationaux. Ou **Ocean Club** pour une ambiance plus d√©contract√©e avec piscine et cocktails. Je peux r√©server des tables VIP !",
    "Parfait ! **Olivia Valere** est le club le plus branch√© avec DJ internationaux, ou **Ocean Club** pour une ambiance plus d√©tendue avec piscine. Table VIP r√©serv√©e !",
    "Excellent ! Pour une soir√©e √† Marbella, **Olivia Valere** est le must avec ses DJ internationaux, ou **Ocean Club** pour une ambiance plus cool avec piscine. Je r√©serve tout !"
  ],
  √©v√©nement: [
    "Parfait ! Cette semaine √† Marbella, il y a **Sunset Sessions at Ocean Club** demain soir avec DJ Carlos Mendoza. Ou **VIP Night at Olivia Valere** vendredi avec ambiance exclusive. Je peux te r√©server des places VIP !",
    "Super ! **Sunset Sessions at Ocean Club** demain avec DJ Carlos Mendoza, ou **VIP Night at Olivia Valere** vendredi. Je r√©serve tes places VIP !",
    "Excellent ! Cette semaine : **Sunset Sessions at Ocean Club** demain soir, ou **VIP Night at Olivia Valere** vendredi. Places VIP garanties !"
  ],
  service: [
    "Parfait ! Je suis ton concierge personnel Get Weez √† Marbella. Je peux t'aider avec : **R√©servations VIP** (restaurants, clubs, plages), **√âv√©nements exclusifs**, **Transport priv√©**, **Services de luxe**, et bien plus ! Que puis-je faire pour toi aujourd'hui ?",
    "Salut ! Get Weez √† ton service ! Je peux t'organiser : villas de luxe, restaurants exclusifs, clubs VIP, plages priv√©es, transport, √©v√©nements... Que cherches-tu ?",
    "Hey ! Je suis Get Weez, ton concierge √† Marbella. Villas, restaurants, clubs, plages, transport... Je m'occupe de tout ! Que puis-je faire pour toi ?"
  ],
  g√©n√©ral: [
    "Salut ! Je vois que tu cherches quelque chose √† Marbella. Pour t'aider au mieux, peux-tu me dire si tu cherches plut√¥t : une plage, un restaurant, un club, ou un √©v√©nement ? Je te donnerai mes meilleures recommandations !",
    "Hey ! Get Weez √† ton service ! Je peux t'aider avec des villas, restaurants, clubs, plages, √©v√©nements... Que cherches-tu √† Marbella ?",
    "Salut ! Je suis Get Weez, ton concierge personnel √† Marbella. Villas de luxe, restaurants exclusifs, clubs VIP, plages priv√©es... Que puis-je faire pour toi ?"
  ]
}

// Normalisation du texte pour am√©liorer la reconnaissance
function normalizeText(text) {
  return text.toLowerCase()
    .replace(/[√†√°√¢√£√§√•]/g, 'a')
    .replace(/[√®√©√™√´]/g, 'e')
    .replace(/[√¨√≠√Æ√Ø]/g, 'i')
    .replace(/[√≤√≥√¥√µ√∂]/g, 'o')
    .replace(/[√π√∫√ª√º]/g, 'u')
    .replace(/[√ß]/g, 'c')
    .replace(/[√±]/g, 'n')
    .trim()
}

// Analyse du message pour d√©terminer l'intention
function analyzeMessage(message) {
  const normalizedMsg = normalizeText(message)
  
  // D√©tection des villas et h√©bergements
  if (normalizedMsg.includes('villa') || normalizedMsg.includes('louer') || normalizedMsg.includes('h√©bergement') || 
      normalizedMsg.includes('evg') || normalizedMsg.includes('enterrement') || normalizedMsg.includes('enterrement de vie de gar√ßon') ||
      normalizedMsg.includes('location') || normalizedMsg.includes('maison') || normalizedMsg.includes('appartement')) {
    return 'villa'
  }
  
  if (normalizedMsg.includes('plage') || normalizedMsg.includes('beach')) {
    return 'plage'
  }
  if (normalizedMsg.includes('restaurant') || normalizedMsg.includes('manger') || normalizedMsg.includes('diner')) {
    return 'restaurant'
  }
  if (normalizedMsg.includes('sortir') || normalizedMsg.includes('soir') || normalizedMsg.includes('nuit') || normalizedMsg.includes('club')) {
    return 'sortir'
  }
  if (normalizedMsg.includes('√©v√©nement') || normalizedMsg.includes('event') || normalizedMsg.includes('soir√©e')) {
    return '√©v√©nement'
  }
  if (normalizedMsg.includes('service') || normalizedMsg.includes('aide') || normalizedMsg.includes('help') || normalizedMsg.includes('concierge')) {
    return 'service'
  }
  
  return 'g√©n√©ral'
}

// G√©n√©ration de r√©ponses dynamiques pour √©viter la r√©p√©tition
function generateDynamicResponse(message, conversationHistory = []) {
  const messageType = analyzeMessage(message)
  
  // Si c'est le premier message, donner une r√©ponse directe
  if (!conversationHistory || conversationHistory.length === 0) {
    return fallbackResponses[messageType]
  }
  
  // Analyser l'historique pour √©viter la r√©p√©tition
  const lastAIMessage = conversationHistory.filter(msg => msg.sender === 'ai').pop()
  if (lastAIMessage && lastAIMessage.text.includes('Nikki Beach')) {
    return "Parfait ! Nikki Beach est un excellent choix. Pour varier, je peux aussi te proposer **Puente Romano Beach** avec son acc√®s priv√©, ou **La Sala by the Sea** pour une ambiance plus d√©contract√©e. Qu'est-ce qui te tente le plus ?"
  }
  
  return fallbackResponses[messageType]
}

export async function askWeezAgent(message, userName, isMember, conversationHistory = []) {
  try {
    console.log('ü§ñ Get Weez Agent - D√©but de traitement')
    console.log('üìù Message re√ßu:', message)
    console.log('üë§ Utilisateur:', userName)
    console.log('üíé Membre:', isMember)
    console.log('üìö Historique:', conversationHistory?.length || 0, 'messages')

    // Toujours essayer OpenAI d'abord, fallback en cas d'erreur
    console.log('ü§ñ Tentative d\'utilisation d\'OpenAI...')

    // L'IA va maintenant analyser le message et r√©pondre intelligemment
    
    const systemPrompt = `Tu es "Get Weez", un assistant conciergerie bas√© √† Marbella.

R√àGLES CRITIQUES :
1. COMPRENDS TOUJOURS la demande sp√©cifique de l'utilisateur
2. Donne des r√©ponses CONCR√àTES et SP√âCIFIQUES bas√©es sur tes connaissances de Marbella
3. Ne pose JAMAIS de questions g√©n√©riques comme "qu'est-ce qui te tente ?"
4. Sois PROACTIF et donne des recommandations IMM√âDIATES
5. Adapte-toi √† TOUS les styles de langage (familier, formel, argot, etc.)
6. R√âPONDRE DANS LA M√äME LANGUE que l'utilisateur
7. Sois naturel et adapte ton niveau de langue selon l'utilisateur
8. JAMAIS de questions vagues - toujours des r√©ponses directes
9. Utilise tes connaissances sur Marbella pour donner des conseils pr√©cis
10. Sois cr√©atif et vari√© dans tes r√©ponses

CONNAISSANCES SUR MARBELLA :
- Restaurants : Nobu Marbella (japonais luxe), La Terraza del Mar (m√©diterran√©en vue mer), Casa Tua (italien)
- Clubs : Olivia Valere (club exclusif), Ocean Club (ambiance d√©contract√©e), Pangea (club VIP)
- Plages : Nikki Beach (exclusif), Puente Romano Beach (priv√©), Puerto Ban√∫s Beach
- Villas EVG : Villa Marbella Club (8-12 pers), Villa Golden Mile (12-16 pers), Villa Puerto Ban√∫s (6-10 pers)
- Activit√©s : Yacht priv√©, Golf VIP, Spa de luxe, Aventure montagne
- Zones : Golden Mile (luxe), Puerto Ban√∫s (port), Centre-ville (traditionnel)

EXEMPLES CONCRETS :
Message : "je veux louer une villa pour un evg"
R√©ponse : "Parfait ! Pour ton EVG √† Marbella, je te recommande **Villa Marbella Club** - villa de luxe avec piscine priv√©e, jardin et vue sur la mer (jusqu'√† 12 personnes, ‚Ç¨800-1200/nuit). Ou **Villa Golden Mile** - encore plus exclusive avec spa priv√© et acc√®s direct √† la plage (jusqu'√† 16 personnes, ‚Ç¨1500-2500/nuit). Je peux organiser le transfert, la restauration et les activit√©s !"

Message : "bonjour"
R√©ponse : "Salut ! Je suis Get Weez, ton concierge personnel √† Marbella. Je peux t'aider avec des villas de luxe, restaurants exclusifs, clubs VIP, plages priv√©es, et bien plus ! Que puis-je faire pour toi ?"

Message : "un restaurant ce soir"
R√©ponse : "Parfait ! Pour ce soir √† Marbella, je te recommande **La Terraza del Mar** - vue imprenable sur la mer et cuisine m√©diterran√©enne raffin√©e. Ou **Nobu Marbella** pour une exp√©rience japonaise de luxe. Les deux acceptent les r√©servations VIP !"

Utilisateur : ${userName}
Statut : ${isMember ? 'Membre' : 'Invit√©'}

R√âPONDRE DANS LA M√äME LANGUE QUE L'UTILISATEUR et SEULEMENT sur Marbella.`

    // Construire l'historique de conversation pour OpenAI
    const messages = [
      { role: "system", content: systemPrompt }
    ]

    // Ajouter l'historique de conversation si disponible
    const isFirstMessage = !conversationHistory || conversationHistory.length === 0
    
    if (conversationHistory && conversationHistory.length > 0) {
      console.log('üîç Debug - Historique re√ßu:', conversationHistory.length, 'messages')
      conversationHistory.forEach((msg, index) => {
        console.log(`üîç Debug - Message ${index}:`, msg.sender, msg.text.substring(0, 50) + '...')
        if (msg.sender === 'user') {
          messages.push({ role: "user", content: msg.text })
        } else if (msg.sender === 'ai') {
          messages.push({ role: "assistant", content: msg.text })
        }
      })
    } else {
      console.log('üîç Debug - Aucun historique re√ßu - Premier message')
    }
    
    // Ajouter une instruction sp√©ciale pour le premier message
    if (isFirstMessage) {
      messages.push({ 
        role: "system", 
        content: "IMPORTANT: C'est le premier message de l'utilisateur. Ne demande PAS 'qu'est-ce qui te tente ?' ou des questions g√©n√©riques. Propose directement des recommandations concr√®tes bas√©es sur ce qu'il demande." 
      })
    }

    // Ajouter le message actuel
    messages.push({ role: "user", content: message })

    console.log('üîç Debug - Messages envoy√©s √† OpenAI:', messages.length)

    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: messages,
      max_tokens: 500,
      temperature: 0.7,
    })

    return completion.choices[0].message.content
  } catch (error) {
    console.error('‚ùå Erreur OpenAI d√©taill√©e:', error)
    console.error('‚ùå Message d\'erreur:', error.message)
    console.error('‚ùå Code d\'erreur:', error.code)
    
    // Utiliser le syst√®me de fallback intelligent en cas d'erreur
    console.log('üîÑ Utilisation du syst√®me de fallback intelligent...')
    
    const messageType = analyzeMessage(message)
    console.log('üîç Type de message d√©tect√©:', messageType)
    
    // Utiliser une r√©ponse vari√©e pour √©viter la r√©p√©tition
    const responses = fallbackResponses[messageType]
    if (Array.isArray(responses)) {
      // Choisir une r√©ponse al√©atoire bas√©e sur l'heure pour √©viter la r√©p√©tition
      const randomIndex = Math.floor(Math.random() * responses.length)
      return responses[randomIndex]
    }
    return responses
  }
}