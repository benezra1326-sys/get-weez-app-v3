import OpenAI from 'openai'
import { establishments, events, activities, recommendations } from '../data/marbella-data.js'
import { getWeezAICoach } from './ai-coaching.js'

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
})

// R√©ponses de fallback intelligentes
const fallbackResponses = {
  plage: "Parfait ! Pour une plage √† Marbella, je te recommande **Nikki Beach** - l'endroit le plus exclusif avec piscine, restaurant et ambiance festive. Ou **Puente Romano Beach** avec son acc√®s priv√© et ses transats de luxe. Les deux ont des r√©servations VIP disponibles !",
  restaurant: "Excellent ! Pour un restaurant √† Marbella, je te conseille **La Terraza del Mar** - vue imprenable sur la mer et cuisine m√©diterran√©enne raffin√©e. Ou **Nobu Marbella** pour une exp√©rience japonaise de luxe. Les deux acceptent les r√©servations VIP !",
  sortir: "Super ! Pour sortir ce soir √† Marbella, **Olivia Valere** est le club le plus exclusif avec DJ internationaux. Ou **Ocean Club** pour une ambiance plus d√©contract√©e avec piscine et cocktails. Je peux r√©server des tables VIP !",
  √©v√©nement: "Parfait ! Cette semaine √† Marbella, il y a **Sunset Sessions at Ocean Club** demain soir avec DJ Carlos Mendoza. Ou **VIP Night at Olivia Valere** vendredi avec ambiance exclusive. Je peux te r√©server des places VIP !",
  service: "Parfait ! Je suis ton concierge personnel Get Weez √† Marbella. Je peux t'aider avec : **R√©servations VIP** (restaurants, clubs, plages), **√âv√©nements exclusifs**, **Transport priv√©**, **Services de luxe**, et bien plus ! Que puis-je faire pour toi aujourd'hui ?",
  g√©n√©ral: "Salut ! Je vois que tu cherches quelque chose √† Marbella. Pour t'aider au mieux, peux-tu me dire si tu cherches plut√¥t : une plage, un restaurant, un club, ou un √©v√©nement ? Je te donnerai mes meilleures recommandations !"
}

// Normalisation du texte pour am√©liorer la reconnaissance
function normalizeText(text) {
  return text.toLowerCase()
    .replace(/[√†√°√¢√£√§√•]/g, 'a')
    .replace(/[√®√©√™√´]/g, 'e')
    .replace(/[√¨√≠√Æ√Ø]/g, 'i')
    .replace(/[√≤√≥√¥√µ√∂]/g, 'o')
    .replace(/[√π√∫√ª√º]/g, 'u')
    .replace(/[√ß]/g, 'c')
    .replace(/[√±]/g, 'n')
    .trim()
}

// Analyse du message pour d√©terminer l'intention
function analyzeMessage(message) {
  const normalizedMsg = normalizeText(message)
  
  if (normalizedMsg.includes('plage') || normalizedMsg.includes('beach')) {
    return 'plage'
  }
  if (normalizedMsg.includes('restaurant') || normalizedMsg.includes('manger') || normalizedMsg.includes('diner')) {
    return 'restaurant'
  }
  if (normalizedMsg.includes('sortir') || normalizedMsg.includes('soir') || normalizedMsg.includes('nuit') || normalizedMsg.includes('club')) {
    return 'sortir'
  }
  if (normalizedMsg.includes('√©v√©nement') || normalizedMsg.includes('event') || normalizedMsg.includes('soir√©e')) {
    return '√©v√©nement'
  }
  if (normalizedMsg.includes('service') || normalizedMsg.includes('aide') || normalizedMsg.includes('help') || normalizedMsg.includes('concierge')) {
    return 'service'
  }
  
  return 'g√©n√©ral'
}

// G√©n√©ration de r√©ponses dynamiques pour √©viter la r√©p√©tition
function generateDynamicResponse(message, conversationHistory = []) {
  const messageType = analyzeMessage(message)
  
  // Si c'est le premier message, donner une r√©ponse directe
  if (!conversationHistory || conversationHistory.length === 0) {
    return fallbackResponses[messageType]
  }
  
  // Analyser l'historique pour √©viter la r√©p√©tition
  const lastAIMessage = conversationHistory.filter(msg => msg.sender === 'ai').pop()
  if (lastAIMessage && lastAIMessage.text.includes('Nikki Beach')) {
    return "Parfait ! Nikki Beach est un excellent choix. Pour varier, je peux aussi te proposer **Puente Romano Beach** avec son acc√®s priv√©, ou **La Sala by the Sea** pour une ambiance plus d√©contract√©e. Qu'est-ce qui te tente le plus ?"
  }
  
  return fallbackResponses[messageType]
}

export async function askWeezAgent(message, userName, isMember, conversationHistory = []) {
  try {
    console.log('ü§ñ Get Weez Agent - D√©but de traitement')
    console.log('üìù Message re√ßu:', message)
    console.log('üë§ Utilisateur:', userName)
    console.log('üíé Membre:', isMember)
    console.log('üìö Historique:', conversationHistory?.length || 0, 'messages')

    // V√©rifier si on peut utiliser OpenAI
    if (!process.env.OPENAI_API_KEY || process.env.OPENAI_API_KEY === 'temp_openai_key') {
      console.log('‚ö†Ô∏è OpenAI non configur√©, utilisation du fallback')
      const messageType = analyzeMessage(message)
      return fallbackResponses[messageType]
    }

    // G√©n√©rer une r√©ponse dynamique pour √©viter la r√©p√©tition
    const dynamicResponse = generateDynamicResponse(message, conversationHistory)
    if (dynamicResponse) {
      console.log('üé≠ R√©ponse dynamique g√©n√©r√©e pour √©viter la r√©p√©tition')
      return dynamicResponse
    }
    
    const systemPrompt = `Tu es "Get Weez", un assistant conciergerie bas√© √† Marbella.

R√àGLES CRITIQUES :
1. Tu DOIS analyser l'historique de conversation avant de r√©pondre
2. Ne r√©p√®te JAMAIS les m√™mes questions g√©n√©riques
3. Si l'utilisateur a d√©j√† donn√© des informations, utilise-les pour r√©pondre de mani√®re coh√©rente
4. Sois proactif et donne des recommandations concr√®tes
5. Adapte-toi √† TOUS les styles de langage (familier, formel, argot, etc.)
6. R√âPONDRE DANS LA M√äME LANGUE que l'utilisateur (fran√ßais, anglais, espagnol, italien, allemand, etc.)
7. Si l'utilisateur m√©lange les langues, r√©ponds dans sa langue principale
8. Sois naturel et adapte ton niveau de langue (formel/familier) selon l'utilisateur
9. NE DEMANDE PAS "qu'est-ce qui te tente ?" ou "qu'est-ce qui te ferait kiffer ?" au premier message
10. Commence par proposer des recommandations concr√®tes bas√©es sur le message de l'utilisateur

EXEMPLE CONCRET :
Premier message : "une plage pour demain"

R√©ponse correcte : "Parfait ! Pour une plage √† Marbella demain, je te recommande **Nikki Beach** - l'endroit le plus exclusif avec piscine, restaurant et ambiance festive. Ou **Puente Romano Beach** avec son acc√®s priv√© et ses transats de luxe. Les deux ont des r√©servations VIP disponibles !"

R√©ponse INCORRECTE : "Qu'est-ce qui te tente ?" (trop g√©n√©rique pour un premier message)

Utilisateur : ${userName}
Statut : ${isMember ? 'Membre' : 'Invit√©'}

R√âPONDRE DANS LA M√äME LANGUE QUE L'UTILISATEUR et SEULEMENT sur Marbella.`

    // Construire l'historique de conversation pour OpenAI
    const messages = [
      { role: "system", content: systemPrompt }
    ]

    // Ajouter l'historique de conversation si disponible
    const isFirstMessage = !conversationHistory || conversationHistory.length === 0
    
    if (conversationHistory && conversationHistory.length > 0) {
      console.log('üîç Debug - Historique re√ßu:', conversationHistory.length, 'messages')
      conversationHistory.forEach((msg, index) => {
        console.log(`üîç Debug - Message ${index}:`, msg.sender, msg.text.substring(0, 50) + '...')
        if (msg.sender === 'user') {
          messages.push({ role: "user", content: msg.text })
        } else if (msg.sender === 'ai') {
          messages.push({ role: "assistant", content: msg.text })
        }
      })
    } else {
      console.log('üîç Debug - Aucun historique re√ßu - Premier message')
    }
    
    // Ajouter une instruction sp√©ciale pour le premier message
    if (isFirstMessage) {
      messages.push({ 
        role: "system", 
        content: "IMPORTANT: C'est le premier message de l'utilisateur. Ne demande PAS 'qu'est-ce qui te tente ?' ou des questions g√©n√©riques. Propose directement des recommandations concr√®tes bas√©es sur ce qu'il demande." 
      })
    }

    // Ajouter le message actuel
    messages.push({ role: "user", content: message })

    console.log('üîç Debug - Messages envoy√©s √† OpenAI:', messages.length)

    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: messages,
      max_tokens: 500,
      temperature: 0.7,
    })

    return completion.choices[0].message.content
  } catch (error) {
    console.error('‚ùå Erreur OpenAI d√©taill√©e:', error)
    console.error('‚ùå Message d\'erreur:', error.message)
    console.error('‚ùå Code d\'erreur:', error.code)
    
    // Utiliser le syst√®me de fallback en cas d'erreur
    console.log('üîÑ Utilisation du syst√®me de fallback...')
    
    // Analyser le message pour donner une r√©ponse directe
    const currentMsg = normalizeText(message)
    console.log('üîç Debug - Message analys√©:', currentMsg)
    
    // R√©ponses directes bas√©es sur le contenu du message
    if (currentMsg.includes('plage') || currentMsg.includes('beach')) {
      return "Parfait ! Pour une plage √† Marbella demain, je te recommande **Nikki Beach** - l'endroit le plus exclusif avec piscine, restaurant et ambiance festive. Ou si tu pr√©f√®res quelque chose de plus calme, **Puente Romano Beach** avec son acc√®s priv√© et ses transats de luxe. Les deux ont des r√©servations VIP disponibles !"
    }
    
    if (currentMsg.includes('restaurant') || currentMsg.includes('manger') || currentMsg.includes('diner')) {
      return "Excellent ! Pour un restaurant √† Marbella, je te conseille **La Terraza del Mar** - vue imprenable sur la mer et cuisine m√©diterran√©enne raffin√©e. Ou **Nobu Marbella** pour une exp√©rience japonaise de luxe. Les deux acceptent les r√©servations VIP !"
    }
    
    if (currentMsg.includes('sortir') || currentMsg.includes('soir') || currentMsg.includes('nuit')) {
      return "Super ! Pour sortir ce soir √† Marbella, **Olivia Valere** est le club le plus exclusif avec DJ internationaux. Ou **Ocean Club** pour une ambiance plus d√©contract√©e avec piscine et cocktails. Je peux r√©server des tables VIP !"
    }
    
    if (currentMsg.includes('√©v√©nement') || currentMsg.includes('event') || currentMsg.includes('soir√©e')) {
      return "Parfait ! Cette semaine √† Marbella, il y a **Sunset Sessions at Ocean Club** demain soir avec DJ Carlos Mendoza. Ou **VIP Night at Olivia Valere** vendredi avec ambiance exclusive. Je peux te r√©server des places VIP !"
    }
    
    if (currentMsg.includes('service') || currentMsg.includes('aide') || currentMsg.includes('help') || currentMsg.includes('concierge')) {
      return "Parfait ! Je suis ton concierge personnel Get Weez √† Marbella. Je peux t'aider avec : **R√©servations VIP** (restaurants, clubs, plages), **√âv√©nements exclusifs**, **Transport priv√©**, **Services de luxe**, et bien plus ! Que puis-je faire pour toi aujourd'hui ?"
    }
    
    // R√©ponse par d√©faut pour les demandes g√©n√©rales
    return "Salut ! Je vois que tu cherches quelque chose √† Marbella. Pour t'aider au mieux, peux-tu me dire si tu cherches plut√¥t : une plage, un restaurant, un club, ou un √©v√©nement ? Je te donnerai mes meilleures recommandations !"
  }
}